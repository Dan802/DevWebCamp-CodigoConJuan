{"version":3,"sources":["horas.js","influencers.js","tags.js"],"names":["document","querySelector","categoria_select","dias_input_radios","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","horaPrevia","classList","remove","limpiarCampos","target","name","Number","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","json","console","log","listadoHoras_HTML","li","add","horasId_Tomados","map","evento","hora_id","listadoHorasArray_HTML","Array","from","filter","dataset","horaid","hora","seleccionarHora","obtenerHorasDisponibles","id","horaSeleccionada","onclick","influencersInput","influencers","influencersFiltrados","listadoInfluencers","influencerHidden","seleccionarInfluencer","influencer","influencerPrevio","influencerId","respuesta","arrayInfluencers","nombre","firstName","trim","lastName","formatearInfluencers","obtenerInfluencers","length","firstChild","removeChild","busqueda_sin_tilde","normalize","replace","expresion","RegExp","toLowerCase","search","influencerHTML","createElement","textContent","appendChild","noResultados","mostrarInfluencer","obtenerInfluencer","influencerDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","eliminarTag","actualizarInputHiden","toString","split","key","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas) {\r\n        const categoria_select = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias_input_radios = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria_select.addEventListener('change', terminoBusqueda);\r\n        dias_input_radios.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria_select.value || '', \r\n            dia: +inputHiddenDia.value || ''\r\n        }\r\n\r\n        if(!Object.values(busqueda).includes('')){ //Para eventos/editar\r\n            //Si el arreglo de busqueda esta lleno entonces...\r\n\r\n            (async () => {\r\n                await buscarEventos();\r\n\r\n                //Resaltar hora actual\r\n                const id = inputHiddenHora.value;\r\n                const horaSeleccionada = document.querySelector(`[data-horaid=\"${id}\"]`);\r\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada');\r\n                horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n                horaSeleccionada.onclick = seleccionarHora;\r\n                \r\n            })();\r\n            \r\n        }\r\n\r\n        function limpiarCampos() {\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n        }\r\n\r\n        function terminoBusqueda(e) {\r\n            limpiarCampos();\r\n            busqueda[e.target.name] = Number(e.target.value);\r\n\r\n            //Si los valores en busqueda incluyen un argumento vacio entonces...\r\n            if(Object.values(busqueda).includes('')){\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n            const {dia, categoria_id } = busqueda;\r\n\r\n            const url = `/api/evento-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            console.log('resultado API(eventos): ', eventos);\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // 1.\r\n                const listadoHoras_HTML = document.querySelectorAll('#horas li');\r\n                listadoHoras_HTML.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n            // 2. Comprobar las horas que han sido tomadas\r\n                const horasId_Tomados = eventos.map( evento => evento.hora_id);\r\n\r\n                // Lo de arriba es igual a crear un nuevo arreglo solo con los id de las horas, o en otras palabras:\r\n                // let horasId_Tomados = [];\r\n                // eventos.forEach(evento => {\r\n                //     horasId_Tomados.push(evento.hora_id);\r\n                // } );\r\n\r\n            // 3. Lo convertimos a Array para aplicar el filter\r\n                const listadoHorasArray_HTML = Array.from(listadoHoras_HTML);\r\n\r\n            // 4. Creamos un array con los li disponibles\r\n                const li_NO_Tomados = listadoHorasArray_HTML.filter(\r\n                    li => !horasId_Tomados.includes(li.dataset.horaid)\r\n                );\r\n\r\n                // Simil:\r\n                // let li_NO_Tomados = [];\r\n\r\n                // listadoHorasArray_HTML.forEach(li => {\r\n                //     if(!horasId_Tomados.includes(li.dataset.horaid)) {\r\n                //         li_NO_Tomados.push(li);\r\n                //     }\r\n                // });\r\n\r\n            // 5. les quitamos la clae que los deshabilita a los li que no han sido tomados\r\n                li_NO_Tomados.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            // 6. Seleccionamos las horas que quedan disponibles\r\n                const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n\r\n            // 7. Les aÃ±adimos un evento\r\n                horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora))\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n\r\n            //UI\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            //Back\r\n            inputHiddenHora.value = Number(e.target.dataset.horaid);\r\n            inputHiddenDia.value = Number(document.querySelector('[name=\"dia\"]:checked').value);\r\n\r\n            console.log('inputHiddenHora.value ' , inputHiddenHora.value);\r\n            console.log('inputHiddenDia.value ' , inputHiddenDia.value);\r\n            console.log('categoria selected ' , busqueda['categoria_id']);\r\n        }\r\n    }\r\n})();","(function() {\r\n\r\n    const influencersInput = document.querySelector('#influencers');\r\n\r\n    if (!influencersInput) return;\r\n\r\n    let influencers = [];\r\n    let influencersFiltrados = [];\r\n    const listadoInfluencers = document.querySelector('#listado-influencers');\r\n    const influencerHidden = document.querySelector('[name=\"influencer_id\"');\r\n\r\n    obtenerInfluencers();\r\n\r\n    influencersInput.addEventListener('input', buscarInfluencer);\r\n\r\n    if(influencerHidden.value) { \r\n    // si hay un influencer id significa que estamos editando un registro, entonces...\r\n        (async() => {\r\n            const influencer = await obtenerInfluencer(influencerHidden.value);\r\n            const {firstName, lastName} = influencer;\r\n\r\n            // Inserta en el html\r\n            const influencerDOM = document.createElement('LI');\r\n            influencerDOM.classList.add('listado-influencers__influencer', 'listado-influencers__influencer--seleccionado');\r\n            influencerDOM.textContent = `${firstName} ${lastName}`;\r\n\r\n            listadoInfluencers.appendChild(influencerDOM);\r\n        })()\r\n    }\r\n\r\n    async function obtenerInfluencers() {\r\n        const url = `/api/influencers`;\r\n\r\n        const respuesta = await fetch(url);\r\n        const resultado = await respuesta.json();\r\n\r\n        console.log('resultado API(influencers): ', resultado);\r\n\r\n\r\n        formatearInfluencers(resultado);\r\n    }\r\n\r\n    async function obtenerInfluencer(id) {\r\n        \r\n        const url = `/api/influencer?id=${id}`;\r\n        const respuesta = await fetch(url)\r\n        const resultado = await respuesta.json()\r\n        \r\n        return resultado;\r\n    }\r\n\r\n    function formatearInfluencers(arrayInfluencers = []) {\r\n        \r\n        influencers = arrayInfluencers.map(influencer => {\r\n            return {\r\n                nombre: `${influencer.firstName.trim()} ${influencer.lastName.trim()}`,\r\n                id: influencer.id\r\n            }\r\n        })\r\n    }\r\n\r\n    function buscarInfluencer(e) {\r\n        const busqueda = e.target.value;\r\n        \r\n        if(busqueda.length < 3) {\r\n            influencersFiltrados = [];\r\n            influencerHidden.value = '';\r\n            \r\n            while(listadoInfluencers.firstChild) {  // listadoInfluencers.innerHTML = '';\r\n                listadoInfluencers.removeChild(listadoInfluencers.firstChild);\r\n            }\r\n\r\n            return;\r\n        }\r\n        \r\n        //Quitamos la tilde con normalize + regular expression \r\n        const busqueda_sin_tilde = busqueda.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n        \r\n        // Expresion Regular: buscan patrones en un valor\r\n        // En este caso, omitimos las masyuculas a la hora de evaluar una condicion\r\n        const expresion = new RegExp(busqueda_sin_tilde, \"i\");\r\n\r\n        influencersFiltrados = influencers.filter(influencer => {\r\n\r\n            let influencer_sinTilde = influencer.nombre.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n\r\n            if(influencer_sinTilde.toLowerCase().search(expresion) != -1){\r\n                return influencer;\r\n            } \r\n        });\r\n\r\n        mostrarInfluencer();\r\n    }\r\n\r\n    function mostrarInfluencer() {\r\n        \r\n        while(listadoInfluencers.firstChild) {  // listadoInfluencers.innerHTML = '';\r\n            listadoInfluencers.removeChild(listadoInfluencers.firstChild);\r\n        }\r\n\r\n        if(influencersFiltrados.length > 0) {\r\n\r\n            influencersFiltrados.forEach(influencer => {\r\n\r\n                const influencerHTML = document.createElement('LI');\r\n                influencerHTML.classList.add('listado-influencers__influencer');\r\n                influencerHTML.textContent = influencer.nombre;\r\n                influencerHTML.dataset.influencerId = influencer.id;\r\n                influencerHTML.onclick = seleccionarInfluencer;\r\n                \r\n                listadoInfluencers.appendChild(influencerHTML);\r\n            });\r\n\r\n        } else {\r\n\r\n            const noResultados = document.createElement('P');\r\n            noResultados.classList.add('listado-influencers__no-resultado');\r\n            noResultados.textContent = \"No hay resultados para tu bÃºsqueda\";\r\n\r\n            listadoInfluencers.appendChild(noResultados);\r\n\r\n        }\r\n    }\r\n\r\n    function seleccionarInfluencer(e) {\r\n        const influencer = e.target;\r\n\r\n        const influencerPrevio = document.querySelector('.listado-influencers__influencer--seleccionado');\r\n\r\n        if(influencerPrevio) {\r\n            influencerPrevio.classList.remove('listado-influencers__influencer--seleccionado');\r\n        }\r\n\r\n        influencer.classList.add('listado-influencers__influencer--seleccionado');\r\n\r\n        influencerHidden.value = influencer.dataset.influencerId;\r\n    }\r\n}\r\n)();","(function() {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name = \"tags\"]');\r\n        let tags = [];\r\n\r\n        //Leer los tags para la opcion de actualizar registros\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            \r\n            if(e.key === ',') { \r\n\r\n                if(e.target.value.trim() === '' || e.target.value.length < 1) {\r\n                  return;  \r\n                }\r\n                \r\n                e.preventDefault();\r\n\r\n                tags = [...tags, e.target.value.trim()]; //trim: elimina espacios\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.onclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            //Despues de mostrar los tags convertimos tags to string\r\n            actualizarInputHiden(); \r\n        }\r\n        \r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            \r\n            // todas las etiquetas excepto a la que le dimos clic (e.target)\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHiden(); \r\n        }\r\n\r\n        function actualizarInputHiden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n\r\n    }   //if(tagsInput)\r\n    \r\n})()\r\n"]}